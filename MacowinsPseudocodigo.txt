class Local{

	const ventas = []
	
	method vender(venta) = ventas.add(venta)
	
	method ganancias() = ventas.sum(venta => venta.precioVenta())
}

class Venta{
	
	var fecha
	var prendas = []
	
	method agregarPrenda(Prenda prenda) = prendas.add(prenda)

	method quitarPrenda(prenda) = prendas.remove(prenda)
	
	method cantidadPrendasVendidas() = prendas.size()
	
	method importeVenta() = self.sumaDePreciosDePrendas()
	
	method sumaPreciosPrendas() = prendas.sum(prenda -> prenda.precio())
}

class VentaConTarjeta inherits VentaEnEfectivo{

	const cuotas
	const coeficiente
	
	override method importeVenta() = super() + cuotas * coeficiente + 0.01 * self.sumaPreciosPrendas()
}

class Prenda{
	
	const precioPropio
	var estado
	
	method precio() = estadoActual.precioSegunEstado(precioPropio)
}

interface Estado{
	
	method precioSegun(precioPropio)
}

class Nueva implements Estado{

	method precioSegunEstado(precioPropio) = precioPropio
}

class Promocion implements Estado{
	
	const valor
	
	method precioSegunEstado(precioPropio) = 0.max(precioPropio - valorFijo)
}

class Liquidacion implements Estado{

	method precioSegunEstado(precioPropio) = 0.5 * precioPropio
}
